<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Windows.Forms" #>
<#@ assembly name="System.Runtime.Serialization" #>
<#@ assembly name="Microsoft.VisualStudio.Shell.Interop.8.0" #>
<#@ assembly name="EnvDTE" #>
<#@ assembly name="EnvDTE80" #>
<#@ assembly name="System.Xml" #>
<#@ assembly name="System.Xml.Linq" #>

<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Xml" #>
<#@ import namespace="System.Xml.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".generated.d.ts" #>

<#@ import namespace="EnvDTE" #>
<#@ import namespace="EnvDTE80" #>
<#@ import namespace="System.Text.RegularExpressions" #>

<#@ include file="JsGenerator.ttinclude" #>

// <autogenerated>
//   This file was generated using <#= System.IO.Path.GetFileName(this.Host.TemplateFile) #>.
//   Any changes made manually will be lost next time the file is regenerated.
// </autogenerated>



declare module <#=
    this.GetSuggestedNamespace(this.templateProjectItem) #> {

    /** just an empty interface which makes programming the *.tt easier */
    export interface IObject {
    }

    <#foreach (ClassWithNamespace cls in this._dataTypeObjects){#>

    <#=GenerateModuleDeclr(cls)#>

    <#=GenerateDocumentation(cls.ClassObject)#>
    export interface I<#=cls.ClassObject.Name#> extends <#=GetExtension(cls.ClassObject)#> {
        <# foreach (var item in this.GetConvertableProperties(cls.ClassObject)) { #>
            <#=GenerateDocumentation(item.PropertyObject)#>
            <#=item.Identifier#> : <#=item.Type#>;

        <#}#>
    }
    
    <#=GenerateEndModuleDeclr(cls)#>

    <#}#>
}


<#+
   public static string Namespace = "FinancialApp.DTO";
#>